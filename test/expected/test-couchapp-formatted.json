{
  "vendor": {
    "couchapp": {
      "metadata": {
        "name": "couchapp",
        "fetch_uri": "git://github.com/couchapp/couchapp.git",
        "description": "official couchapp vendor"
      }
    }
  },
  "language": "javascript",
  "views": {
    "recent-items": {
      "map": "function(doc) {\n  if (doc.created_at) {\n      var p = doc.profile || {};\n      emit(doc.created_at, {\n          message:doc.message,\n          gravatar_url : p.gravatar_url,\n          nickname : p.nickname,\n          name : doc.name\n      });\n  }\n};"
    }
  },
  "lists": {},
  "_attachments": {
    "index.html": {
      "data": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPHRpdGxlPkV4YW1wbGUgQ291Y2hBcHA8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZS9tYWluLmNzcyIgdHlwZT0idGV4dC9jc3MiPgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxkaXYgaWQ9ImFjY291bnQiPjwvZGl2PgoKICAgIDxoMT5FeGFtcGxlIENvdWNoQXBwPC9oMT4KCiAgICA8ZGl2IGlkPSJwcm9maWxlIj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0iY29udGVudCI+PC9kaXY+CgogICAgPGRpdiBpZD0ic2lkZWJhciI+CiAgICAgIDxwPkVkaXQgd2VsY29tZSBtZXNzYWdlLjwvcD4KICAgICAgPHA+SWRlYXM6IFlvdSBjb3VsZCBlYXNpbHkgdHVybiB0aGlzIGludG8gYSBwaG90byBzaGFyaW5nIGFwcCwgCiAgICAgICAgICBvciBhIGdyb2NlcnkgbGlzdCwgb3IgYSBjaGF0IHJvb20uIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jb3VjaGFwcC9leGFtcGxlIj5Db2RlIGZvciB0aGlzIGFwcCBpcyBvbiBHaXRodWIuPC9hPjwvcD4KICAgIDwvZGl2PgogIDwvYm9keT4KICA8c2NyaXB0IHNyYz0iL191dGlscy9zY3JpcHQvc2hhMS5qcyI+PC9zY3JpcHQ+CiAgPHNjcmlwdCBzcmM9Ii9fdXRpbHMvc2NyaXB0L2pzb24yLmpzIj48L3NjcmlwdD4KICA8c2NyaXB0IHNyYz0iL191dGlscy9zY3JpcHQvanF1ZXJ5LmpzIj48L3NjcmlwdD4KICA8c2NyaXB0IHNyYz0iL191dGlscy9zY3JpcHQvanF1ZXJ5LmNvdWNoLmpzIj48L3NjcmlwdD4KICA8c2NyaXB0IHNyYz0idmVuZG9yL2NvdWNoYXBwL2pxdWVyeS5jb3VjaExvZ2luLmpzIj48L3NjcmlwdD4KICA8c2NyaXB0IHNyYz0idmVuZG9yL2NvdWNoYXBwL2pxdWVyeS5jb3VjaFByb2ZpbGUuanMiPjwvc2NyaXB0PgogIDxzY3JpcHQgc3JjPSJ2ZW5kb3IvY291Y2hhcHAvbWQ1LmpzIj48L3NjcmlwdD4KICA8c2NyaXB0IHNyYz0idmVuZG9yL2NvdWNoYXBwL2pxdWVyeS5tdXN0YWNoZS5qcyI+PC9zY3JpcHQ+Cgo8IS0tIHRlbXBsYXRlcyB1c2VkIGJ5IGFwcC5qcyAtLT4KICA8c2NyaXB0IGlkPSJuZXctbWVzc2FnZSIgdHlwZT0idGV4dC94LW11c3RhY2hlIiBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgIDxkaXYgY2xhc3M9ImF2YXRhciI+CiAgICAgICAge3sjZ3JhdmF0YXJfdXJsfX08aW1nIHNyYz0ie3tncmF2YXRhcl91cmx9fSIvPnt7L2dyYXZhdGFyX3VybH19CiAgICAgICAgPGRpdiBjbGFzcz0ibmFtZSI+CiAgICAgICAgICB7e25hbWV9fQogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGZvcm0gaWQ9ImNyZWF0ZS1tZXNzYWdlIj4KICAgICAgICA8bGFiZWw+TmV3IG1lc3NhZ2UgZnJvbSB7e25pY2tuYW1lfX06IDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJtZXNzYWdlIiBzaXplPTYwIHZhbHVlPSIiPjwvbGFiZWw+CiAgICAgIDwvZm9ybT4KICAgICAgPGRpdiBzdHlsZT0iY2xlYXI6bGVmdDsiPjwvZGl2PgogIDwvc2NyaXB0PgoKICA8c2NyaXB0IGlkPSJyZWNlbnQtbWVzc2FnZXMiIHR5cGU9InRleHQveC1tdXN0YWNoZSIgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxoMz5SZWNlbnQgTWVzc2FnZXM8L2gzPgogICAgICAgIDx1bCBpZD0iaXRlbXMiPgogICAgICAgICAge3sjaXRlbXN9fQogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXZhdGFyIj4KICAgICAgICAgICAgICAgIHt7I2dyYXZhdGFyX3VybH19PGltZyBzcmM9Int7Z3JhdmF0YXJfdXJsfX0iIGFsdD0ie3tuYW1lfX0iLz57ey9ncmF2YXRhcl91cmx9fQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmFtZSI+CiAgICAgICAgICAgICAgICAgIHt7bmlja25hbWV9fQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHA+e3ttZXNzYWdlfX08L3A+CiAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iY2xlYXI6bGVmdDsiPjwvZGl2PgogICAgICAgICAgICA8L2xpPgogICAgICAgICAge3svaXRlbXN9fQogICAgICAgIDwvdWw+CiAgICAgICAgPHA+PGVtPlByb3RpcDo8L2VtPiBJZiB5b3Ugc2V0dXAgY29udGludW91cyByZXBsaWNhdGlvbiBiZXR3ZWVuIHRoaXMgZGF0YWJhc2UgYW5kIGEgcmVtb3RlIG9uZSwgdGhpcyBsaXN0IHdpbGwgcmVmbGVjdCByZW1vdGUgY2hhbmdlcyBpbiBuZWFyIHJlYWwtdGltZS48L3A+CiAgICAgICAgPHA+VGhpcyB3b3VsZCBiZSBhIGdvb2QgcGxhY2UgdG8gYWRkIHBhZ2luYXRpb24uPC9wPgogIDwvc2NyaXB0PgogIDxzY3JpcHQgc3JjPSJzY3JpcHQvYXBwLmpzIj48L3NjcmlwdD4KCjwvaHRtbD4K",
      "content_type": "text/html"
    },
    "vendor/couchapp/md5.js": {
      "data": "",
      "content_type": "application/javascript"
    },
    "script/app.js": {
      "data": "Ly8gQXBhY2hlIDIuMCBKIENocmlzIEFuZGVyc29uIDIwMTEKJChmdW5jdGlvbigpIHsgICAKICAgIC8vIGZyaWVuZGx5IGhlbHBlciBodHRwOi8vdGlueXVybC5jb20vNmFvdzZ5bgogICAgJC5mbi5zZXJpYWxpemVPYmplY3QgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgbyA9IHt9OwogICAgICAgIHZhciBhID0gdGhpcy5zZXJpYWxpemVBcnJheSgpOwogICAgICAgICQuZWFjaChhLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgaWYgKG9bdGhpcy5uYW1lXSkgewogICAgICAgICAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0ucHVzaCkgewogICAgICAgICAgICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgb1t0aGlzLm5hbWVdLnB1c2godGhpcy52YWx1ZSB8fCAnJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBvW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlIHx8ICcnOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIG87CiAgICB9OwoKICAgIHZhciBwYXRoID0gdW5lc2NhcGUoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUpLnNwbGl0KCcvJyksCiAgICAgICAgZGVzaWduID0gcGF0aFszXSwKICAgICAgICBkYiA9ICQuY291Y2guZGIocGF0aFsxXSk7CiAgICBmdW5jdGlvbiBkcmF3SXRlbXMoKSB7CiAgICAgICAgZGIudmlldyhkZXNpZ24gKyAiL3JlY2VudC1pdGVtcyIsIHsKICAgICAgICAgICAgZGVzY2VuZGluZyA6ICJ0cnVlIiwKICAgICAgICAgICAgbGltaXQgOiA1MCwKICAgICAgICAgICAgdXBkYXRlX3NlcSA6IHRydWUsCiAgICAgICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICBzZXR1cENoYW5nZXMoZGF0YS51cGRhdGVfc2VxKTsKICAgICAgICAgICAgICAgIHZhciB0aGVtID0gJC5tdXN0YWNoZSgkKCIjcmVjZW50LW1lc3NhZ2VzIikuaHRtbCgpLCB7CiAgICAgICAgICAgICAgICAgICAgaXRlbXMgOiBkYXRhLnJvd3MubWFwKGZ1bmN0aW9uKHIpIHtyZXR1cm4gci52YWx1ZTt9KQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAkKCIjY29udGVudCIpLmh0bWwodGhlbSk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH07CiAgICBkcmF3SXRlbXMoKTsKICAgIHZhciBjaGFuZ2VzUnVubmluZyA9IGZhbHNlOwogICAgZnVuY3Rpb24gc2V0dXBDaGFuZ2VzKHNpbmNlKSB7CiAgICAgICAgaWYgKCFjaGFuZ2VzUnVubmluZykgewogICAgICAgICAgICB2YXIgY2hhbmdlSGFuZGxlciA9IGRiLmNoYW5nZXMoc2luY2UpOwogICAgICAgICAgICBjaGFuZ2VzUnVubmluZyA9IHRydWU7CiAgICAgICAgICAgIGNoYW5nZUhhbmRsZXIub25DaGFuZ2UoZHJhd0l0ZW1zKTsKICAgICAgICB9CiAgICB9CiAgICAkLmNvdWNoUHJvZmlsZS50ZW1wbGF0ZXMucHJvZmlsZVJlYWR5ID0gJCgiI25ldy1tZXNzYWdlIikuaHRtbCgpOwogICAgJCgiI2FjY291bnQiKS5jb3VjaExvZ2luKHsKICAgICAgICBsb2dnZWRJbiA6IGZ1bmN0aW9uKHIpIHsKICAgICAgICAgICAgJCgiI3Byb2ZpbGUiKS5jb3VjaFByb2ZpbGUociwgewogICAgICAgICAgICAgICAgcHJvZmlsZVJlYWR5IDogZnVuY3Rpb24ocHJvZmlsZSkgewogICAgICAgICAgICAgICAgICAgICQoIiNjcmVhdGUtbWVzc2FnZSIpLnN1Ym1pdChmdW5jdGlvbihlKXsKICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZm9ybSA9IHRoaXMsIGRvYyA9ICQoZm9ybSkuc2VyaWFsaXplT2JqZWN0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGRvYy5jcmVhdGVkX2F0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgZG9jLnByb2ZpbGUgPSBwcm9maWxlOwogICAgICAgICAgICAgICAgICAgICAgICBkYi5zYXZlRG9jKGRvYywge3N1Y2Nlc3MgOiBmdW5jdGlvbigpIHtmb3JtLnJlc2V0KCk7fX0pOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfSkuZmluZCgiaW5wdXQiKS5mb2N1cygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGxvZ2dlZE91dCA6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCIjcHJvZmlsZSIpLmh0bWwoJzxwPlBsZWFzZSBsb2cgaW4gdG8gc2VlIHlvdXIgcHJvZmlsZS48L3A+Jyk7CiAgICAgICAgfQogICAgfSk7CiB9KTs=",
      "content_type": "application/javascript"
    },
    "vendor/couchapp/jquery.mustache.js": {
      "data": "LyoKU2hhbWVsZXNzIHBvcnQgb2YgYSBzaGFtZWxlc3MgcG9ydApAZGVmdW5rdCA9PiBAamFubCA9PiBAYXEKIApTZWUgaHR0cDovL2dpdGh1Yi5jb20vZGVmdW5rdC9tdXN0YWNoZSBmb3IgbW9yZSBpbmZvLgoqLwogCjsoZnVuY3Rpb24oJCkgewoKLyoKICBtdXN0YWNoZS5qcyDigJQgTG9naWMtbGVzcyB0ZW1wbGF0ZXMgaW4gSmF2YVNjcmlwdAoKICBTZWUgaHR0cDovL211c3RhY2hlLmdpdGh1Yi5jb20vIGZvciBtb3JlIGluZm8uCiovCgp2YXIgTXVzdGFjaGUgPSBmdW5jdGlvbigpIHsKICB2YXIgUmVuZGVyZXIgPSBmdW5jdGlvbigpIHt9OwoKICBSZW5kZXJlci5wcm90b3R5cGUgPSB7CiAgICBvdGFnOiAie3siLAogICAgY3RhZzogIn19IiwKICAgIHByYWdtYXM6IHt9LAogICAgYnVmZmVyOiBbXSwKICAgIHByYWdtYXNfaW1wbGVtZW50ZWQ6IHsKICAgICAgIklNUExJQ0lULUlURVJBVE9SIjogdHJ1ZQogICAgfSwKICAgIGNvbnRleHQ6IHt9LAoKICAgIHJlbmRlcjogZnVuY3Rpb24odGVtcGxhdGUsIGNvbnRleHQsIHBhcnRpYWxzLCBpbl9yZWN1cnNpb24pIHsKICAgICAgLy8gcmVzZXQgYnVmZmVyICYgc2V0IGNvbnRleHQKICAgICAgaWYoIWluX3JlY3Vyc2lvbikgewogICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7CiAgICAgICAgdGhpcy5idWZmZXIgPSBbXTsgLy8gVE9ETzogbWFrZSB0aGlzIG5vbi1sYXp5CiAgICAgIH0KCiAgICAgIC8vIGZhaWwgZmFzdAogICAgICBpZighdGhpcy5pbmNsdWRlcygiIiwgdGVtcGxhdGUpKSB7CiAgICAgICAgaWYoaW5fcmVjdXJzaW9uKSB7CiAgICAgICAgICByZXR1cm4gdGVtcGxhdGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuc2VuZCh0ZW1wbGF0ZSk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CgogICAgICB0ZW1wbGF0ZSA9IHRoaXMucmVuZGVyX3ByYWdtYXModGVtcGxhdGUpOwogICAgICB2YXIgaHRtbCA9IHRoaXMucmVuZGVyX3NlY3Rpb24odGVtcGxhdGUsIGNvbnRleHQsIHBhcnRpYWxzKTsKICAgICAgaWYoaW5fcmVjdXJzaW9uKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyX3RhZ3MoaHRtbCwgY29udGV4dCwgcGFydGlhbHMsIGluX3JlY3Vyc2lvbik7CiAgICAgIH0KCiAgICAgIHRoaXMucmVuZGVyX3RhZ3MoaHRtbCwgY29udGV4dCwgcGFydGlhbHMsIGluX3JlY3Vyc2lvbik7CiAgICB9LAoKICAgIC8qCiAgICAgIFNlbmRzIHBhcnNlZCBsaW5lcwogICAgKi8KICAgIHNlbmQ6IGZ1bmN0aW9uKGxpbmUpIHsKICAgICAgaWYobGluZSAhPSAiIikgewogICAgICAgIHRoaXMuYnVmZmVyLnB1c2gobGluZSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoKICAgICAgTG9va3MgZm9yICVQUkFHTUFTCiAgICAqLwogICAgcmVuZGVyX3ByYWdtYXM6IGZ1bmN0aW9uKHRlbXBsYXRlKSB7CiAgICAgIC8vIG5vIHByYWdtYXMKICAgICAgaWYoIXRoaXMuaW5jbHVkZXMoIiUiLCB0ZW1wbGF0ZSkpIHsKICAgICAgICByZXR1cm4gdGVtcGxhdGU7CiAgICAgIH0KCiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCh0aGlzLm90YWcgKyAiJShbXFx3LV0rKSA/KFtcXHddKz1bXFx3XSspPyIgKwogICAgICAgICAgICB0aGlzLmN0YWcpOwogICAgICByZXR1cm4gdGVtcGxhdGUucmVwbGFjZShyZWdleCwgZnVuY3Rpb24obWF0Y2gsIHByYWdtYSwgb3B0aW9ucykgewogICAgICAgIGlmKCF0aGF0LnByYWdtYXNfaW1wbGVtZW50ZWRbcHJhZ21hXSkgewogICAgICAgICAgdGhyb3coe21lc3NhZ2U6IAogICAgICAgICAgICAiVGhpcyBpbXBsZW1lbnRhdGlvbiBvZiBtdXN0YWNoZSBkb2Vzbid0IHVuZGVyc3RhbmQgdGhlICciICsKICAgICAgICAgICAgcHJhZ21hICsgIicgcHJhZ21hIn0pOwogICAgICAgIH0KICAgICAgICB0aGF0LnByYWdtYXNbcHJhZ21hXSA9IHt9OwogICAgICAgIGlmKG9wdGlvbnMpIHsKICAgICAgICAgIHZhciBvcHRzID0gb3B0aW9ucy5zcGxpdCgiPSIpOwogICAgICAgICAgdGhhdC5wcmFnbWFzW3ByYWdtYV1bb3B0c1swXV0gPSBvcHRzWzFdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgLy8gaWdub3JlIHVua25vd24gcHJhZ21hcyBzaWxlbnRseQogICAgICB9KTsKICAgIH0sCgogICAgLyoKICAgICAgVHJpZXMgdG8gZmluZCBhIHBhcnRpYWwgaW4gdGhlIGN1cmVudCBzY29wZSBhbmQgcmVuZGVyIGl0CiAgICAqLwogICAgcmVuZGVyX3BhcnRpYWw6IGZ1bmN0aW9uKG5hbWUsIGNvbnRleHQsIHBhcnRpYWxzKSB7CiAgICAgIG5hbWUgPSB0aGlzLnRyaW0obmFtZSk7CiAgICAgIGlmKCFwYXJ0aWFscyB8fCBwYXJ0aWFsc1tuYW1lXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgdGhyb3coe21lc3NhZ2U6ICJ1bmtub3duX3BhcnRpYWwgJyIgKyBuYW1lICsgIicifSk7CiAgICAgIH0KICAgICAgaWYodHlwZW9mKGNvbnRleHRbbmFtZV0pICE9ICJvYmplY3QiKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyKHBhcnRpYWxzW25hbWVdLCBjb250ZXh0LCBwYXJ0aWFscywgdHJ1ZSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMucmVuZGVyKHBhcnRpYWxzW25hbWVdLCBjb250ZXh0W25hbWVdLCBwYXJ0aWFscywgdHJ1ZSk7CiAgICB9LAoKICAgIC8qCiAgICAgIFJlbmRlcnMgaW52ZXJ0ZWQgKF4pIGFuZCBub3JtYWwgKCMpIHNlY3Rpb25zCiAgICAqLwogICAgcmVuZGVyX3NlY3Rpb246IGZ1bmN0aW9uKHRlbXBsYXRlLCBjb250ZXh0LCBwYXJ0aWFscykgewogICAgICBpZighdGhpcy5pbmNsdWRlcygiIyIsIHRlbXBsYXRlKSAmJiAhdGhpcy5pbmNsdWRlcygiXiIsIHRlbXBsYXRlKSkgewogICAgICAgIHJldHVybiB0ZW1wbGF0ZTsKICAgICAgfQoKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICAvLyBDU1cgLSBBZGRlZCAiKz8iIHNvIGl0IGZpbmRzIHRoZSB0aWdoZXN0IGJvdW5kLCBub3QgdGhlIHdpZGVzdAogICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKHRoaXMub3RhZyArICIoXFxefFxcIylcXHMqKC4rKVxccyoiICsgdGhpcy5jdGFnICsKICAgICAgICAgICAgICAiXG4qKFtcXHNcXFNdKz8pIiArIHRoaXMub3RhZyArICJcXC9cXHMqXFwyXFxzKiIgKyB0aGlzLmN0YWcgKwogICAgICAgICAgICAgICJcXHMqIiwgIm1nIik7CgogICAgICAvLyBmb3IgZWFjaCB7eyNmb299fXt7L2Zvb319IHNlY3Rpb24gZG8uLi4KICAgICAgcmV0dXJuIHRlbXBsYXRlLnJlcGxhY2UocmVnZXgsIGZ1bmN0aW9uKG1hdGNoLCB0eXBlLCBuYW1lLCBjb250ZW50KSB7CiAgICAgICAgdmFyIHZhbHVlID0gdGhhdC5maW5kKG5hbWUsIGNvbnRleHQpOwogICAgICAgIGlmKHR5cGUgPT0gIl4iKSB7IC8vIGludmVydGVkIHNlY3Rpb24KICAgICAgICAgIGlmKCF2YWx1ZSB8fCB0aGF0LmlzX2FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgLy8gZmFsc2Ugb3IgZW1wdHkgbGlzdCwgcmVuZGVyIGl0CiAgICAgICAgICAgIHJldHVybiB0aGF0LnJlbmRlcihjb250ZW50LCBjb250ZXh0LCBwYXJ0aWFscywgdHJ1ZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmKHR5cGUgPT0gIiMiKSB7IC8vIG5vcm1hbCBzZWN0aW9uCiAgICAgICAgICBpZih0aGF0LmlzX2FycmF5KHZhbHVlKSkgeyAvLyBFbnVtZXJhYmxlLCBMZXQncyBsb29wIQogICAgICAgICAgICByZXR1cm4gdGhhdC5tYXAodmFsdWUsIGZ1bmN0aW9uKHJvdykgewogICAgICAgICAgICAgIHJldHVybiB0aGF0LnJlbmRlcihjb250ZW50LCB0aGF0LmNyZWF0ZV9jb250ZXh0KHJvdyksCiAgICAgICAgICAgICAgICBwYXJ0aWFscywgdHJ1ZSk7CiAgICAgICAgICAgIH0pLmpvaW4oIiIpOwogICAgICAgICAgfSBlbHNlIGlmKHRoYXQuaXNfb2JqZWN0KHZhbHVlKSkgeyAvLyBPYmplY3QsIFVzZSBpdCBhcyBzdWJjb250ZXh0IQogICAgICAgICAgICByZXR1cm4gdGhhdC5yZW5kZXIoY29udGVudCwgdGhhdC5jcmVhdGVfY29udGV4dCh2YWx1ZSksCiAgICAgICAgICAgICAgcGFydGlhbHMsIHRydWUpOwogICAgICAgICAgfSBlbHNlIGlmKHR5cGVvZiB2YWx1ZSA9PT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICAvLyBoaWdoZXIgb3JkZXIgc2VjdGlvbgogICAgICAgICAgICByZXR1cm4gdmFsdWUuY2FsbChjb250ZXh0LCBjb250ZW50LCBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoYXQucmVuZGVyKHRleHQsIGNvbnRleHQsIHBhcnRpYWxzLCB0cnVlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgaWYodmFsdWUpIHsgLy8gYm9vbGVhbiBzZWN0aW9uCiAgICAgICAgICAgIHJldHVybiB0aGF0LnJlbmRlcihjb250ZW50LCBjb250ZXh0LCBwYXJ0aWFscywgdHJ1ZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyoKICAgICAgUmVwbGFjZSB7e2Zvb319IGFuZCBmcmllbmRzIHdpdGggdmFsdWVzIGZyb20gb3VyIHZpZXcKICAgICovCiAgICByZW5kZXJfdGFnczogZnVuY3Rpb24odGVtcGxhdGUsIGNvbnRleHQsIHBhcnRpYWxzLCBpbl9yZWN1cnNpb24pIHsKICAgICAgLy8gdGl0IGZvciB0YXQKICAgICAgdmFyIHRoYXQgPSB0aGlzOwoKICAgICAgdmFyIG5ld19yZWdleCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBuZXcgUmVnRXhwKHRoYXQub3RhZyArICIoPXwhfD58XFx7fCUpPyhbXlxcLyNcXF5dKz8pXFwxPyIgKwogICAgICAgICAgdGhhdC5jdGFnICsgIisiLCAiZyIpOwogICAgICB9OwoKICAgICAgdmFyIHJlZ2V4ID0gbmV3X3JlZ2V4KCk7CiAgICAgIHZhciB0YWdfcmVwbGFjZV9jYWxsYmFjayA9IGZ1bmN0aW9uKG1hdGNoLCBvcGVyYXRvciwgbmFtZSkgewogICAgICAgIHN3aXRjaChvcGVyYXRvcikgewogICAgICAgIGNhc2UgIiEiOiAvLyBpZ25vcmUgY29tbWVudHMKICAgICAgICAgIHJldHVybiAiIjsKICAgICAgICBjYXNlICI9IjogLy8gc2V0IG5ldyBkZWxpbWl0ZXJzLCByZWJ1aWxkIHRoZSByZXBsYWNlIHJlZ2V4cAogICAgICAgICAgdGhhdC5zZXRfZGVsaW1pdGVycyhuYW1lKTsKICAgICAgICAgIHJlZ2V4ID0gbmV3X3JlZ2V4KCk7CiAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgY2FzZSAiPiI6IC8vIHJlbmRlciBwYXJ0aWFsCiAgICAgICAgICByZXR1cm4gdGhhdC5yZW5kZXJfcGFydGlhbChuYW1lLCBjb250ZXh0LCBwYXJ0aWFscyk7CiAgICAgICAgY2FzZSAieyI6IC8vIHRoZSB0cmlwbGUgbXVzdGFjaGUgaXMgdW5lc2NhcGVkCiAgICAgICAgICByZXR1cm4gdGhhdC5maW5kKG5hbWUsIGNvbnRleHQpOwogICAgICAgIGRlZmF1bHQ6IC8vIGVzY2FwZSB0aGUgdmFsdWUKICAgICAgICAgIHJldHVybiB0aGF0LmVzY2FwZSh0aGF0LmZpbmQobmFtZSwgY29udGV4dCkpOwogICAgICAgIH0KICAgICAgfTsKICAgICAgdmFyIGxpbmVzID0gdGVtcGxhdGUuc3BsaXQoIlxuIik7CiAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgewogICAgICAgIGxpbmVzW2ldID0gbGluZXNbaV0ucmVwbGFjZShyZWdleCwgdGFnX3JlcGxhY2VfY2FsbGJhY2ssIHRoaXMpOwogICAgICAgIGlmKCFpbl9yZWN1cnNpb24pIHsKICAgICAgICAgIHRoaXMuc2VuZChsaW5lc1tpXSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZihpbl9yZWN1cnNpb24pIHsKICAgICAgICByZXR1cm4gbGluZXMuam9pbigiXG4iKTsKICAgICAgfQogICAgfSwKCiAgICBzZXRfZGVsaW1pdGVyczogZnVuY3Rpb24oZGVsaW1pdGVycykgewogICAgICB2YXIgZGVscyA9IGRlbGltaXRlcnMuc3BsaXQoIiAiKTsKICAgICAgdGhpcy5vdGFnID0gdGhpcy5lc2NhcGVfcmVnZXgoZGVsc1swXSk7CiAgICAgIHRoaXMuY3RhZyA9IHRoaXMuZXNjYXBlX3JlZ2V4KGRlbHNbMV0pOwogICAgfSwKCiAgICBlc2NhcGVfcmVnZXg6IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgLy8gdGhhbmsgeW91IFNpbW9uIFdpbGxpc29uCiAgICAgIGlmKCFhcmd1bWVudHMuY2FsbGVlLnNSRSkgewogICAgICAgIHZhciBzcGVjaWFscyA9IFsKICAgICAgICAgICcvJywgJy4nLCAnKicsICcrJywgJz8nLCAnfCcsCiAgICAgICAgICAnKCcsICcpJywgJ1snLCAnXScsICd7JywgJ30nLCAnXFwnCiAgICAgICAgXTsKICAgICAgICBhcmd1bWVudHMuY2FsbGVlLnNSRSA9IG5ldyBSZWdFeHAoCiAgICAgICAgICAnKFxcJyArIHNwZWNpYWxzLmpvaW4oJ3xcXCcpICsgJyknLCAnZycKICAgICAgICApOwogICAgICB9CiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoYXJndW1lbnRzLmNhbGxlZS5zUkUsICdcXCQxJyk7CiAgICB9LAoKICAgIC8qCiAgICAgIGZpbmQgYG5hbWVgIGluIGN1cnJlbnQgYGNvbnRleHRgLiBUaGF0IGlzIGZpbmQgbWUgYSB2YWx1ZQogICAgICBmcm9tIHRoZSB2aWV3IG9iamVjdAogICAgKi8KICAgIGZpbmQ6IGZ1bmN0aW9uKG5hbWUsIGNvbnRleHQpIHsKICAgICAgbmFtZSA9IHRoaXMudHJpbShuYW1lKTsKCiAgICAgIC8vIENoZWNrcyB3aGV0aGVyIGEgdmFsdWUgaXMgdGhydXRoeSBvciBmYWxzZSBvciAwCiAgICAgIGZ1bmN0aW9uIGlzX2tpbmRhX3RydXRoeShib29sKSB7CiAgICAgICAgcmV0dXJuIGJvb2wgPT09IGZhbHNlIHx8IGJvb2wgPT09IDAgfHwgYm9vbDsKICAgICAgfQoKICAgICAgdmFyIHZhbHVlOwogICAgICBpZihpc19raW5kYV90cnV0aHkoY29udGV4dFtuYW1lXSkpIHsKICAgICAgICB2YWx1ZSA9IGNvbnRleHRbbmFtZV07CiAgICAgIH0gZWxzZSBpZihpc19raW5kYV90cnV0aHkodGhpcy5jb250ZXh0W25hbWVdKSkgewogICAgICAgIHZhbHVlID0gdGhpcy5jb250ZXh0W25hbWVdOwogICAgICB9CgogICAgICBpZih0eXBlb2YgdmFsdWUgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICByZXR1cm4gdmFsdWUuYXBwbHkoY29udGV4dCk7CiAgICAgIH0KICAgICAgaWYodmFsdWUgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfQogICAgICAvLyBzaWxlbnRseSBpZ25vcmUgdW5rb3duIHZhcmlhYmxlcwogICAgICByZXR1cm4gIiI7CiAgICB9LAoKICAgIC8vIFV0aWxpdHkgbWV0aG9kcwoKICAgIC8qIGluY2x1ZGVzIHRhZyAqLwogICAgaW5jbHVkZXM6IGZ1bmN0aW9uKG5lZWRsZSwgaGF5c3RhY2spIHsKICAgICAgcmV0dXJuIGhheXN0YWNrLmluZGV4T2YodGhpcy5vdGFnICsgbmVlZGxlKSAhPSAtMTsKICAgIH0sCgogICAgLyoKICAgICAgRG9lcyBhd2F5IHdpdGggbmFzdHkgY2hhcmFjdGVycwogICAgKi8KICAgIGVzY2FwZTogZnVuY3Rpb24ocykgewogICAgICBzID0gU3RyaW5nKHMgPT09IG51bGwgPyAiIiA6IHMpOwogICAgICByZXR1cm4gcy5yZXBsYWNlKC8mKD8hXHcrOyl8WyI8PlxcXS9nLCBmdW5jdGlvbihzKSB7CiAgICAgICAgc3dpdGNoKHMpIHsKICAgICAgICBjYXNlICImIjogcmV0dXJuICImYW1wOyI7CiAgICAgICAgY2FzZSAiXFwiOiByZXR1cm4gIlxcXFwiOwogICAgICAgIGNhc2UgJyInOiByZXR1cm4gJ1wiJzsKICAgICAgICBjYXNlICI8IjogcmV0dXJuICImbHQ7IjsKICAgICAgICBjYXNlICI+IjogcmV0dXJuICImZ3Q7IjsKICAgICAgICBkZWZhdWx0OiByZXR1cm4gczsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICAvLyBieSBAbGFuZ2FsZXgsIHN1cHBvcnQgZm9yIGFycmF5cyBvZiBzdHJpbmdzCiAgICBjcmVhdGVfY29udGV4dDogZnVuY3Rpb24oX2NvbnRleHQpIHsKICAgICAgaWYodGhpcy5pc19vYmplY3QoX2NvbnRleHQpKSB7CiAgICAgICAgcmV0dXJuIF9jb250ZXh0OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBpdGVyYXRvciA9ICIuIjsKICAgICAgICBpZih0aGlzLnByYWdtYXNbIklNUExJQ0lULUlURVJBVE9SIl0pIHsKICAgICAgICAgIGl0ZXJhdG9yID0gdGhpcy5wcmFnbWFzWyJJTVBMSUNJVC1JVEVSQVRPUiJdLml0ZXJhdG9yOwogICAgICAgIH0KICAgICAgICB2YXIgY3R4ID0ge307CiAgICAgICAgY3R4W2l0ZXJhdG9yXSA9IF9jb250ZXh0OwogICAgICAgIHJldHVybiBjdHg7CiAgICAgIH0KICAgIH0sCgogICAgaXNfb2JqZWN0OiBmdW5jdGlvbihhKSB7CiAgICAgIHJldHVybiBhICYmIHR5cGVvZiBhID09ICJvYmplY3QiOwogICAgfSwKCiAgICBpc19hcnJheTogZnVuY3Rpb24oYSkgewogICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpID09PSAnW29iamVjdCBBcnJheV0nOwogICAgfSwKCiAgICAvKgogICAgICBHZXRzIHJpZCBvZiBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlCiAgICAqLwogICAgdHJpbTogZnVuY3Rpb24ocykgewogICAgICByZXR1cm4gcy5yZXBsYWNlKC9eXHMqfFxzKiQvZywgIiIpOwogICAgfSwKCiAgICAvKgogICAgICBXaHksIHdoeSwgd2h5PyBCZWNhdXNlIElFLiBDcnksIGNyeSBjcnkuCiAgICAqLwogICAgbWFwOiBmdW5jdGlvbihhcnJheSwgZm4pIHsKICAgICAgaWYgKHR5cGVvZiBhcnJheS5tYXAgPT0gImZ1bmN0aW9uIikgewogICAgICAgIHJldHVybiBhcnJheS5tYXAoZm4pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciByID0gW107CiAgICAgICAgdmFyIGwgPSBhcnJheS5sZW5ndGg7CiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGw7IGkrKykgewogICAgICAgICAgci5wdXNoKGZuKGFycmF5W2ldKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiByOwogICAgICB9CiAgICB9CiAgfTsKCiAgcmV0dXJuKHsKICAgIG5hbWU6ICJtdXN0YWNoZS5qcyIsCiAgICB2ZXJzaW9uOiAiMC4zLjEtZGV2IiwKCiAgICAvKgogICAgICBUdXJucyBhIHRlbXBsYXRlIGFuZCB2aWV3IGludG8gSFRNTAogICAgKi8KICAgIHRvX2h0bWw6IGZ1bmN0aW9uKHRlbXBsYXRlLCB2aWV3LCBwYXJ0aWFscywgc2VuZF9mdW4pIHsKICAgICAgdmFyIHJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKCk7CiAgICAgIGlmKHNlbmRfZnVuKSB7CiAgICAgICAgcmVuZGVyZXIuc2VuZCA9IHNlbmRfZnVuOwogICAgICB9CiAgICAgIHJlbmRlcmVyLnJlbmRlcih0ZW1wbGF0ZSwgdmlldywgcGFydGlhbHMpOwogICAgICBpZighc2VuZF9mdW4pIHsKICAgICAgICByZXR1cm4gcmVuZGVyZXIuYnVmZmVyLmpvaW4oIlxuIik7CiAgICAgIH0KICAgIH0sCiAgICBlc2NhcGUgOiBmdW5jdGlvbih0ZXh0KSB7CiAgICAgIHJldHVybiBuZXcgUmVuZGVyZXIoKS5lc2NhcGUodGV4dCk7CiAgICB9CiAgfSk7Cn0oKTsKCiAgJC5tdXN0YWNoZSA9IGZ1bmN0aW9uKHRlbXBsYXRlLCB2aWV3LCBwYXJ0aWFscykgewogICAgcmV0dXJuIE11c3RhY2hlLnRvX2h0bWwodGVtcGxhdGUsIHZpZXcsIHBhcnRpYWxzKTsKICB9OwoKICAkLm11c3RhY2hlLmVzY2FwZSA9IGZ1bmN0aW9uKHRleHQpIHsKICAgIHJldHVybiBNdXN0YWNoZS5lc2NhcGUodGV4dCk7CiAgfTsKCn0pKGpRdWVyeSk7Cg==",
      "content_type": "application/javascript"
    },
    "vendor/couchapp/jquery.couchProfile.js": {
      "data": "Ly8gQ29weXJpZ2h0IENocmlzIEFuZGVyc29uIDIwMTEKLy8gQXBhY2hlIDIuMCBMaWNlbnNlCi8vIGpxdWVyeS5jb3VjaFByb2ZpbGUuanMKLy8gZGVwZW5kcyBvbiBtZDUsIAovLyBqcXVlcnkuY291Y2hMb2dpbi5qcyBhbmQgcmVxdWlyZXMuanMKLy8gCi8vIEV4YW1wbGUgVXNhZ2UgKGxvZ2dlZEluIGFuZCBsb2dnZWRPdXQgY2FsbGJhY2tzIGFyZSBvcHRpb25hbCk6IAovLyAgICAkKCIjbXlwcm9maWxlZGl2IikuY291Y2hQcm9maWxlKHsKLy8gICAgICAgIHByb2ZpbGVSZWFkeSA6IGZ1bmN0aW9uKHByb2ZpbGUpIHsKLy8gICAgICAgICAgICBhbGVydCgiaGVsbG8sIGRvIHlvdSBsb29rIGxpa2UgdGhpcz8gIitwcm9maWxlLmdyYXZhdGFyX3VybCk7Ci8vICAgICAgICB9Ci8vICAgIH0pOwoKKGZ1bmN0aW9uKCQpIHsKICAgICQuY291Y2hQcm9maWxlID0ge307CiAgICAkLmNvdWNoUHJvZmlsZS50ZW1wbGF0ZXMgPSB7CiAgICAgICAgcHJvZmlsZVJlYWR5IDogJzxkaXYgY2xhc3M9ImF2YXRhciI+e3sjZ3JhdmF0YXJfdXJsfX08aW1nIHNyYz0ie3tncmF2YXRhcl91cmx9fSIvPnt7L2dyYXZhdGFyX3VybH19PGRpdiBjbGFzcz0ibmFtZSI+e3tuaWNrbmFtZX19PC9kaXY+PC9kaXY+PHA+SGVsbG8ge3tuaWNrbmFtZX19ITwvcD48ZGl2IHN0eWxlPSJjbGVhcjpsZWZ0OyI+PC9kaXY+JywKICAgICAgICBuZXdQcm9maWxlIDogJzxmb3JtPjxwPkhlbGxvIHt7bmFtZX19LCBQbGVhc2Ugc2V0dXAgeW91ciB1c2VyIHByb2ZpbGUuPC9wPjxsYWJlbCBmb3I9Im5pY2tuYW1lIj5OaWNrbmFtZSA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibmlja25hbWUiIHZhbHVlPSIiPjwvbGFiZWw+PGxhYmVsIGZvcj0iZW1haWwiPkVtYWlsICg8ZW0+Zm9yIDxhIGhyZWY9Imh0dHA6Ly9ncmF2YXRhci5jb20iPkdyYXZhdGFyPC9hPjwvZW0+KSA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZW1haWwiIHZhbHVlPSIiPjwvbGFiZWw+PGxhYmVsIGZvcj0idXJsIj5VUkwgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9InVybCIgdmFsdWU9IiI+PC9sYWJlbD48aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iR28gJnJhcnI7Ij48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ1c2VyQ3R4TmFtZSIgdmFsdWU9Int7bmFtZX19IiBpZD0idXNlckN0eE5hbWUiPjwvZm9ybT4nCiAgICB9OwogICAgCiAgICAkLmZuLmNvdWNoUHJvZmlsZSA9IGZ1bmN0aW9uKHNlc3Npb24sIG9wdHMpIHsKICAgICAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgICAgICB2YXIgdGVtcGxhdGVzID0gJC5jb3VjaFByb2ZpbGUudGVtcGxhdGVzOwogICAgICAgIHZhciB1c2VyQ3R4ID0gc2Vzc2lvbi51c2VyQ3R4OwogICAgICAgIHZhciB3aWRnZXQgPSAkKHRoaXMpOwogICAgICAgIC8vIGxvYWQgdGhlIHByb2ZpbGUgZnJvbSB0aGUgdXNlciBkb2MKICAgICAgICB2YXIgZGIgPSAkLmNvdWNoLmRiKHNlc3Npb24uaW5mby5hdXRoZW50aWNhdGlvbl9kYik7CiAgICAgICAgdmFyIHVzZXJEb2NJZCA9ICJvcmcuY291Y2hkYi51c2VyOiIrdXNlckN0eC5uYW1lOwogICAgICAgIGRiLm9wZW5Eb2ModXNlckRvY0lkLCB7CiAgICAgICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbih1c2VyRG9jKSB7CiAgICAgICAgICAgICAgICB2YXIgcHJvZmlsZSA9IHVzZXJEb2NbImNvdWNoLmFwcC5wcm9maWxlIl07CiAgICAgICAgICAgICAgICBpZiAocHJvZmlsZSkgewogICAgICAgICAgICAgICAgICAgIHByb2ZpbGUubmFtZSA9IHVzZXJEb2MubmFtZTsKICAgICAgICAgICAgICAgICAgICBwcm9maWxlUmVhZHkocHJvZmlsZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIG5ld1Byb2ZpbGUodXNlckN0eCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIAogICAgICAgIGZ1bmN0aW9uIHByb2ZpbGVSZWFkeShwcm9maWxlKSB7CiAgICAgICAgICAgIHdpZGdldC5odG1sKCQubXVzdGFjaGUodGVtcGxhdGVzLnByb2ZpbGVSZWFkeSwgcHJvZmlsZSkpOwogICAgICAgICAgICBpZiAob3B0cy5wcm9maWxlUmVhZHkpIHtvcHRzLnByb2ZpbGVSZWFkeShwcm9maWxlKX07CiAgICAgICAgfTsKICAgICAgICAKICAgICAgICBmdW5jdGlvbiBzdG9yZVByb2ZpbGVPblVzZXJEb2MobmV3UHJvZmlsZSkgewogICAgICAgICAgICAvLyBzdG9yZSB0aGUgdXNlciBwcm9maWxlIG9uIHRoZSB1c2VyIGFjY291bnQgZG9jdW1lbnQKICAgICAgICAgICAgJC5jb3VjaC51c2VyRGIoZnVuY3Rpb24oZGIpIHsKICAgICAgICAgICAgICB2YXIgdXNlckRvY0lkID0gIm9yZy5jb3VjaGRiLnVzZXI6Iit1c2VyQ3R4Lm5hbWU7CiAgICAgICAgICAgICAgZGIub3BlbkRvYyh1c2VyRG9jSWQsIHsKICAgICAgICAgICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbih1c2VyRG9jKSB7CiAgICAgICAgICAgICAgICAgIHVzZXJEb2NbImNvdWNoLmFwcC5wcm9maWxlIl0gPSBuZXdQcm9maWxlOwogICAgICAgICAgICAgICAgICBkYi5zYXZlRG9jKHVzZXJEb2MsIHsKICAgICAgICAgICAgICAgICAgICBzdWNjZXNzIDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICBuZXdQcm9maWxlLm5hbWUgPSB1c2VyRG9jLm5hbWU7CiAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlUmVhZHkobmV3UHJvZmlsZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfTsKICAgICAgICAKICAgICAgICBmdW5jdGlvbiBuZXdQcm9maWxlKHVzZXJDdHgpIHsKICAgICAgICAgICAgd2lkZ2V0Lmh0bWwoJC5tdXN0YWNoZSh0ZW1wbGF0ZXMubmV3UHJvZmlsZSwgdXNlckN0eCkpOwogICAgICAgICAgICB3aWRnZXQuZmluZCgiZm9ybSIpLnN1Ym1pdChmdW5jdGlvbihlKSB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgdmFyIGZvcm0gPSB0aGlzOwogICAgICAgICAgICAgICAgdmFyIG5hbWUgPSAkKCJpbnB1dFtuYW1lPXVzZXJDdHhOYW1lXSIsZm9ybSkudmFsKCk7CiAgICAgICAgICAgICAgICB2YXIgbmV3UHJvZmlsZSA9IHsKICAgICAgICAgICAgICAgICAgcmFuZCA6IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoKSwgCiAgICAgICAgICAgICAgICAgIG5pY2tuYW1lIDogJCgiaW5wdXRbbmFtZT1uaWNrbmFtZV0iLGZvcm0pLnZhbCgpLAogICAgICAgICAgICAgICAgICBlbWFpbCA6ICQoImlucHV0W25hbWU9ZW1haWxdIixmb3JtKS52YWwoKSwKICAgICAgICAgICAgICAgICAgdXJsIDogJCgiaW5wdXRbbmFtZT11cmxdIixmb3JtKS52YWwoKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIC8vIHNldHVwIGdyYXZhdGFyX3VybCBpZiBtZDUuanMgaXMgbG9hZGVkCiAgICAgICAgICAgICAgICBpZiAoaGV4X21kNSkgewogICAgICAgICAgICAgICAgICBuZXdQcm9maWxlLmdyYXZhdGFyX3VybCA9ICdodHRwOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJytoZXhfbWQ1KG5ld1Byb2ZpbGUuZW1haWwgfHwgbmV3UHJvZmlsZS5yYW5kKSsnLmpwZz9zPTQwJmQ9aWRlbnRpY29uJzsgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBzdG9yZVByb2ZpbGVPblVzZXJEb2MobmV3UHJvZmlsZSk7CiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgfQp9KShqUXVlcnkpOwo=",
      "content_type": "application/javascript"
    },
    "vendor/couchapp/jquery.couchLogin.js": {
      "data": "Ly8gQ29weXJpZ2h0IENocmlzIEFuZGVyc29uIDIwMTEKLy8gQXBhY2hlIDIuMCBMaWNlbnNlCi8vIGpxdWVyeS5jb3VjaExvZ2luLmpzCi8vIAovLyBFeGFtcGxlIFVzYWdlIChsb2dnZWRJbiBhbmQgbG9nZ2VkT3V0IGNhbGxiYWNrcyBhcmUgb3B0aW9uYWwpOiAKLy8gICAgJCgiI215bG9naW5kaXYiKS5jb3VjaExvZ2luKHsKLy8gICAgICAgIGxvZ2dlZEluIDogZnVuY3Rpb24odXNlckN0eCkgewovLyAgICAgICAgICAgIGFsZXJ0KCJoZWxsbyAiK3VzZXJDdHgubmFtZSk7Ci8vICAgICAgICB9LCAKLy8gICAgICAgIGxvZ2dlZE91dCA6IGZ1bmN0aW9uKCkgewovLyAgICAgICAgICAgIGFsZXJ0KCJieWUgYnllIik7Ci8vICAgICAgICB9Ci8vICAgIH0pOwoKKGZ1bmN0aW9uKCQpIHsKICAgICQuZm4uY291Y2hMb2dpbiA9IGZ1bmN0aW9uKG9wdHMpIHsKICAgICAgICB2YXIgZWxlbSA9ICQodGhpcyk7CiAgICAgICAgb3B0cyA9IG9wdHMgfHwge307CiAgICAgICAgZnVuY3Rpb24gaW5pdFdpZGdldCgpIHsKICAgICAgICAgICAgJC5jb3VjaC5zZXNzaW9uKHsKICAgICAgICAgICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbihzZXNzaW9uKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJDdHggPSBzZXNzaW9uLnVzZXJDdHg7CiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJDdHgubmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmVtcHR5KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0uYXBwZW5kKGxvZ2dlZEluKHNlc3Npb24pKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMubG9nZ2VkSW4pIHtvcHRzLmxvZ2dlZEluKHNlc3Npb24pfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXNlckN0eC5yb2xlcy5pbmRleE9mKCJfYWRtaW4iKSAhPSAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmh0bWwodGVtcGxhdGVzLmFkbWluUGFydHkpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0uaHRtbCh0ZW1wbGF0ZXMubG9nZ2VkT3V0KTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMubG9nZ2VkT3V0KSB7b3B0cy5sb2dnZWRPdXQoKX0KICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICAgIGluaXRXaWRnZXQoKTsKICAgICAgICBmdW5jdGlvbiBkb0xvZ2luKG5hbWUsIHBhc3MpIHsKICAgICAgICAgICAgJC5jb3VjaC5sb2dpbih7bmFtZTpuYW1lLCBwYXNzd29yZDpwYXNzLCBzdWNjZXNzOmluaXRXaWRnZXR9KTsKICAgICAgICB9OwogICAgICAgIGVsZW0uZGVsZWdhdGUoImFbaHJlZj0jc2lnbnVwXSIsICJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBlbGVtLmh0bWwodGVtcGxhdGVzLnNpZ251cEZvcm0pOwogICAgICAgICAgICBlbGVtLmZpbmQoJ2lucHV0W25hbWU9Im5hbWUiXScpLmZvY3VzKCk7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9KTsKICAgICAgICBlbGVtLmRlbGVnYXRlKCJhW2hyZWY9I2xvZ2luXSIsICJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBlbGVtLmh0bWwodGVtcGxhdGVzLmxvZ2luRm9ybSk7CiAgICAgICAgICAgIGVsZW0uZmluZCgnaW5wdXRbbmFtZT0ibmFtZSJdJykuZm9jdXMoKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0pOwogICAgICAgIGVsZW0uZGVsZWdhdGUoImFbaHJlZj0jbG9nb3V0XSIsICJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkLmNvdWNoLmxvZ291dCh7c3VjY2VzcyA6IGluaXRXaWRnZXR9KTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0pOwogICAgICAgIGVsZW0uZGVsZWdhdGUoImZvcm0ubG9naW4iLCAic3VibWl0IiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGRvTG9naW4oJCgnaW5wdXRbbmFtZT1uYW1lXScsIHRoaXMpLnZhbCgpLCAgCiAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPXBhc3N3b3JkXScsIHRoaXMpLnZhbCgpKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0pOwogICAgICAgIGVsZW0uZGVsZWdhdGUoImZvcm0uc2lnbnVwIiwgInN1Ym1pdCIsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICB2YXIgbmFtZSA9ICQoJ2lucHV0W25hbWU9bmFtZV0nLCB0aGlzKS52YWwoKSwgIAogICAgICAgICAgICAgICAgcGFzcyA9ICQoJ2lucHV0W25hbWU9cGFzc3dvcmRdJywgdGhpcykudmFsKCk7CiAgICAgICAgICAgICQuY291Y2guc2lnbnVwKHtuYW1lIDogbmFtZX0sIHBhc3MsIHsKICAgICAgICAgICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbigpIHtkb0xvZ2luKG5hbWUsIHBhc3MpfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAgICAgIAogICAgICAgIH0pOwogICAgfQogICAgdmFyIHRlbXBsYXRlcyA9IHsKICAgICAgICBhZG1pblBhcnR5IDogJzxwPjxzdHJvbmc+QWRtaW4gcGFydHksIGV2ZXJ5b25lIGlzIGFkbWluITwvc3Ryb25nPiBGaXggdGhpcyBpbiA8YSBocmVmPSIvX3V0aWxzL2luZGV4Lmh0bWwiPkZ1dG9uPC9hPiBiZWZvcmUgcHJvY2VlZGluZy48L3A+JywKICAgICAgICBsb2dnZWRPdXQgOiAnPGEgaHJlZj0iI3NpZ251cCI+U2lnbnVwPC9hPiBvciA8YSBocmVmPSIjbG9naW4iPkxvZ2luPC9hPicsCiAgICAgICAgbG9naW5Gb3JtIDogJzxmb3JtIGNsYXNzPSJsb2dpbiI+PGxhYmVsIGZvcj0ibmFtZSI+TmFtZTwvbGFiZWw+IDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJuYW1lIiB2YWx1ZT0iIiBhdXRvY2FwaXRhbGl6ZT0ib2ZmIiBhdXRvY29ycmVjdD0ib2ZmIj48bGFiZWwgZm9yPSJwYXNzd29yZCI+UGFzc3dvcmQ8L2xhYmVsPiA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iIj48aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iTG9naW4iPjxhIGhyZWY9IiNzaWdudXAiPm9yIFNpZ251cDwvYT48L2Zvcm0+JywKICAgICAgICBzaWdudXBGb3JtIDogJzxmb3JtIGNsYXNzPSJzaWdudXAiPjxsYWJlbCBmb3I9Im5hbWUiPk5hbWU8L2xhYmVsPiA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibmFtZSIgdmFsdWU9IiIgYXV0b2NhcGl0YWxpemU9Im9mZiIgYXV0b2NvcnJlY3Q9Im9mZiI+PGxhYmVsIGZvcj0icGFzc3dvcmQiPlBhc3N3b3JkPC9sYWJlbD4gPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiI+PGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IlNpZ251cCI+PGEgaHJlZj0iI2xvZ2luIj5vciBMb2dpbjwvYT48L2Zvcm0+JwogICAgfTsKICAgIGZ1bmN0aW9uIGxvZ2dlZEluKHIpIHsKICAgICAgICB2YXIgYXV0aF9kYiA9IGVuY29kZVVSSUNvbXBvbmVudChyLmluZm8uYXV0aGVudGljYXRpb25fZGIpCiAgICAgICAgLCB1cmlfbmFtZSA9IGVuY29kZVVSSUNvbXBvbmVudChyLnVzZXJDdHgubmFtZSkKICAgICAgICAsIHNwYW4gPSAkKCc8c3Bhbj5XZWxjb21lIDxhIHRhcmdldD0iX25ldyIgaHJlZj0iL191dGlscy9kb2N1bWVudC5odG1sPycgCiAgICAgICAgICAgICsgYXV0aF9kYiArJy9vcmcuY291Y2hkYi51c2VyJTNBJyArIHVyaV9uYW1lIAogICAgICAgICAgICArICciIGNsYXNzPSJuYW1lIj48L2E+ISA8YSBocmVmPSIjbG9nb3V0Ij5Mb2dvdXQ/PC9hPjwvc3Bhbj4nKTsKICAgICAgICAkKCdhLm5hbWUnLCBzcGFuKS50ZXh0KHIudXNlckN0eC5uYW1lKTsgLy8geW91IGNhbiBnZXQgdGhlIHVzZXIgbmFtZSBoZXJlCiAgICAgICAgcmV0dXJuIHNwYW47CiAgICB9Cn0pKGpRdWVyeSk7Cg==",
      "content_type": "application/javascript"
    },
    "vendor/couchapp/jquery.couch.app.js": {
      "data": "",
      "content_type": "application/javascript"
    },
    "vendor/couchapp/jquery.couchForm.js": {
      "data": "Ly8gSSB0aGluayB0aGlzIHNob3VsZCBnbyBpbiBqcXVlcnkuY291Y2guanMKCihmdW5jdGlvbigkKSB7CiAgICAkLmZuLmNvdWNoRm9ybSA9IGZ1bmN0aW9uKG9wdHMpIHsKICAgICAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgICAgICBpZiAoIW9wdHMuZGIpIHsKICAgICAgICAgICAgb3B0cy5kYiA9ICQuY291Y2guZGIoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKVsxXSk7CiAgICAgICAgfQogICAgICAgIHZhciBmb3JtID0gJCh0aGlzKTsKICAgICAgICBmb3JtLnN1Ym1pdChmdW5jdGlvbihlKSB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgdmFyIGRvYyA9IGZvcm0uc2VyaWFsaXplT2JqZWN0KCk7CiAgICAgICAgICAgIGlmIChvcHRzLmJlZm9yZVNhdmUpIHsKICAgICAgICAgICAgICAgIGRvYyA9IG9wdHMuYmVmb3JlU2F2ZShkb2MpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG9wdHMuZGIuc2F2ZURvYyhkb2MsIHsKICAgICAgICAgICAgICBzdWNjZXNzIDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgIGlmIChvcHRzLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgICAgIG9wdHMuc3VjY2Vzcyhkb2MpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIGZvcm1bMF0ucmVzZXQoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSk7CiAgICB9OwogICAgLy8gZnJpZW5kbHkgaGVscGVyIGh0dHA6Ly90aW55dXJsLmNvbS82YW93NnluCiAgICAkLmZuLnNlcmlhbGl6ZU9iamVjdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBvID0ge307CiAgICAgICAgdmFyIGEgPSB0aGlzLnNlcmlhbGl6ZUFycmF5KCk7CiAgICAgICAgJC5lYWNoKGEsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZiAob1t0aGlzLm5hbWVdKSB7CiAgICAgICAgICAgICAgICBpZiAoIW9bdGhpcy5uYW1lXS5wdXNoKSB7CiAgICAgICAgICAgICAgICAgICAgb1t0aGlzLm5hbWVdID0gW29bdGhpcy5uYW1lXV07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IHRoaXMudmFsdWUgfHwgJyc7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gbzsKICAgIH07Cn0pKGpRdWVyeSk7Cg==",
      "content_type": "application/javascript"
    },
    "style/main.css": {
      "data": "LyogYWRkIHN0eWxlcyBoZXJlICovCgpib2R5IHsKICBmb250OjFlbSBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7Cn0KCmgxIHsKICBtYXJnaW4tdG9wOjA7Cn0KCiNhY2NvdW50IHsKICBmbG9hdDpyaWdodDsKfQoKI3Byb2ZpbGUgewogIGJvcmRlcjo0cHggc29saWQgI2VkZDsKICBiYWNrZ3JvdW5kOiNmZWU7CiAgcGFkZGluZzo4cHg7CiAgbWFyZ2luLWJvdHRvbTo4cHg7Cn0KCiNjb250ZW50IHsKICBib3JkZXI6NHB4IHNvbGlkICNkZGU7CiAgYmFja2dyb3VuZDojZWVmOwogIHBhZGRpbmc6OHB4OwogIHdpZHRoOjYwJTsKICBmbG9hdDpsZWZ0Owp9Cgojc2lkZWJhciB7CiAgYm9yZGVyOjRweCBzb2xpZCAjZGZkOwogIHBhZGRpbmc6OHB4OwogIGZsb2F0OnJpZ2h0OwogIHdpZHRoOjMwJTsKfQoKI2l0ZW1zIGxpIHsKICBib3JkZXI6NHB4IHNvbGlkICNmNWY1ZmY7CiAgYmFja2dyb3VuZDojZmZmOwogIHBhZGRpbmc6OHB4OwogIG1hcmdpbjo0cHggMDsKfQoKZm9ybSB7CiAgcGFkZGluZzo0cHg7CiAgbWFyZ2luOjZweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiNkZGQ7ICAKfQoKZGl2LmF2YXRhciB7CiAgcGFkZGluZzoycHg7CiAgcGFkZGluZy1ib3R0b206MDsKICBtYXJnaW4tcmlnaHQ6NHB4OwogIGZsb2F0OmxlZnQ7CiAgZm9udC1zaXplOjAuNzhlbTsKICB3aWR0aCA6IDYwcHg7CiAgaGVpZ2h0IDogNjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCmRpdi5hdmF0YXIgLm5hbWUgewogIHBhZGRpbmctdG9wOjJweDsKfQoKZGl2LmF2YXRhciBpbWcgewogIG1hcmdpbjowIGF1dG87CiAgcGFkZGluZzowOwogIHdpZHRoIDogNDBweDsKICBoZWlnaHQgOiA0MHB4Owp9Cgp1bCB7CiAgbGlzdC1zdHlsZTogbm9uZTsKfQo=",
      "content_type": "text/css"
    },
    "vendor/couchapp/jquery.couch.app.util.js": {
      "data": "JC5sb2cgPSBmdW5jdGlvbihtKSB7CiAgaWYgKHdpbmRvdyAmJiB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS5sb2cpIHsKICAgIHdpbmRvdy5jb25zb2xlLmxvZyhhcmd1bWVudHMubGVuZ3RoID09IDEgPyBtIDogYXJndW1lbnRzKTsKICB9Cn07CgovLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzExODQ2MjQvc2VyaWFsaXplLWZvcm0tdG8tanNvbi13aXRoLWpxdWVyeS8xMTg2MzA5IzExODYzMDkKJC5mbi5zZXJpYWxpemVPYmplY3QgPSBmdW5jdGlvbigpIHsKICAgIHZhciBvID0ge307CiAgICB2YXIgYSA9IHRoaXMuc2VyaWFsaXplQXJyYXkoKTsKICAgICQuZWFjaChhLCBmdW5jdGlvbigpIHsKICAgICAgICBpZiAob1t0aGlzLm5hbWVdKSB7CiAgICAgICAgICAgIGlmICghb1t0aGlzLm5hbWVdLnB1c2gpIHsKICAgICAgICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG9bdGhpcy5uYW1lXS5wdXNoKHRoaXMudmFsdWUgfHwgJycpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IHRoaXMudmFsdWUgfHwgJyc7CiAgICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gbzsKfTsKCi8vIHRvZG8gcmVtb3ZlIHRoaXMgY3JhcApmdW5jdGlvbiBlc2NhcGVIVE1MKHN0KSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgcmV0dXJuKCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICBzdCAmJiBzdC5yZXBsYWNlKC8mL2csJyZhbXA7JykuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgcmVwbGFjZSgvPi9nLCcmZ3Q7JykuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICByZXBsYWNlKC88L2csJyZsdDsnKS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgIHJlcGxhY2UoLyIvZywnJnF1b3Q7JykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCn07CgpmdW5jdGlvbiBzYWZlSFRNTChzdCwgbGVuKSB7CiAgcmV0dXJuIHN0ID8gZXNjYXBlSFRNTChzdC5zdWJzdHJpbmcoMCxsZW4pKSA6ICcnOwp9CgovLyB0b2RvIHRoaXMgc2hvdWxkIHRha2UgYSByZXBsYWNlbWVudCB0ZW1wbGF0ZQokLmxpbmtpZnkgPSBmdW5jdGlvbihib2R5KSB7CiAgcmV0dXJuIGJvZHkucmVwbGFjZSgvKChmdHB8aHR0cHxodHRwcyk6XC9cLyhcdys6ezAsMX1cdypAKT8oXFMrKSg6WzAtOV0rKT8oXC98XC8oW1x3IyE6Lj8rPSYlQCFcLVwvXSkpPykvZ2ksZnVuY3Rpb24oYSkgewogICAgcmV0dXJuICc8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iJythKyciPicrYSsnPC9hPic7CiAgfSkucmVwbGFjZSgvXEAoW1x3XC1dKykvZyxmdW5jdGlvbih1c2VyLG5hbWUpIHsKICAgIHJldHVybiAnPGEgaHJlZj0iIy9tZW50aW9ucy8nK2VuY29kZVVSSUNvbXBvbmVudChuYW1lLnRvTG93ZXJDYXNlKCkpKyciPicrdXNlcisnPC9hPic7CiAgfSkucmVwbGFjZSgvXCMoW1x3XC1cLl0rKS9nLGZ1bmN0aW9uKHdvcmQsdGFnKSB7CiAgICByZXR1cm4gJzxhIGhyZWY9IiMvdGFncy8nK2VuY29kZVVSSUNvbXBvbmVudCh0YWcudG9Mb3dlckNhc2UoKSkrJyI+Jyt3b3JkKyc8L2E+JzsKICB9KTsKfTsKCiQuZm4ucHJldHR5RGF0ZSA9IGZ1bmN0aW9uKCkgewogICQodGhpcykuZWFjaChmdW5jdGlvbigpIHsKICAgIHZhciBzdHJpbmcsIHRpdGxlID0gJCh0aGlzKS5hdHRyKCJ0aXRsZSIpOwogICAgaWYgKHRpdGxlKSB7CiAgICAgIHN0cmluZyA9ICQucHJldHR5RGF0ZSh0aXRsZSk7CiAgICB9IGVsc2UgewogICAgICBzdHJpbmcgPSAkLnByZXR0eURhdGUoJCh0aGlzKS50ZXh0KCkpOwogICAgfQogICAgJCh0aGlzKS50ZXh0KHN0cmluZyk7CiAgfSk7Cn07CgokLnByZXR0eURhdGUgPSBmdW5jdGlvbih0aW1lKXsKICAKCXZhciBkYXRlID0gbmV3IERhdGUodGltZS5yZXBsYWNlKC8tL2csIi8iKS5yZXBsYWNlKCJUIiwgIiAiKS5yZXBsYWNlKCJaIiwgIiArMDAwMCIpLnJlcGxhY2UoLyhcZCpcOlxkKjpcZCopXC5cZCovZywiJDEiKSksCgkJZGlmZiA9ICgoKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAtIGRhdGUuZ2V0VGltZSgpKSAvIDEwMDApLAoJCWRheV9kaWZmID0gTWF0aC5mbG9vcihkaWZmIC8gODY0MDApOwoKICBpZiAoaXNOYU4oZGF5X2RpZmYpKSByZXR1cm4gdGltZTsKCglyZXR1cm4gZGF5X2RpZmYgPCAxICYmICgKCQkJZGlmZiA8IDYwICYmICJqdXN0IG5vdyIgfHwKCQkJZGlmZiA8IDEyMCAmJiAiMSBtaW51dGUgYWdvIiB8fAoJCQlkaWZmIDwgMzYwMCAmJiBNYXRoLmZsb29yKCBkaWZmIC8gNjAgKSArICIgbWludXRlcyBhZ28iIHx8CgkJCWRpZmYgPCA3MjAwICYmICIxIGhvdXIgYWdvIiB8fAoJCQlkaWZmIDwgODY0MDAgJiYgTWF0aC5mbG9vciggZGlmZiAvIDM2MDAgKSArICIgaG91cnMgYWdvIikgfHwKCQlkYXlfZGlmZiA9PSAxICYmICJ5ZXN0ZXJkYXkiIHx8CgkJZGF5X2RpZmYgPCAyMSAmJiBkYXlfZGlmZiArICIgZGF5cyBhZ28iIHx8CgkJZGF5X2RpZmYgPCA0NSAmJiBNYXRoLmNlaWwoIGRheV9kaWZmIC8gNyApICsgIiB3ZWVrcyBhZ28iIHx8CiAgICB0aW1lOwogICAgLy8gZGF5X2RpZmYgPCA3MzAgJiYgTWF0aC5jZWlsKCBkYXlfZGlmZiAvIDMxICkgKyAiIG1vbnRocyBhZ28iIHx8CiAgICAvLyBNYXRoLmNlaWwoIGRheV9kaWZmIC8gMzY1ICkgKyAiIHllYXJzIGFnbyI7Cn07CgokLmFyZ3NUb0FycmF5ID0gZnVuY3Rpb24oYXJncykgewogIGlmICghYXJncy5jYWxsZWUpIHJldHVybiBhcmdzOwogIHZhciBhcnJheSA9IFtdOwogIGZvciAodmFyIGk9MDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHsKICAgIGFycmF5LnB1c2goYXJnc1tpXSk7CiAgfTsKICByZXR1cm4gYXJyYXk7Cn0K",
      "content_type": "application/javascript"
    }
  },
  "updates": {},
  "README": "## Generated CouchApp\n\nThis is meant to be an example CouchApp and to ship with most of the CouchApp goodies.\n\nClone with git:\n\n    git clone git://github.com/couchapp/example.git\n    cd example\n\nInstall with \n    \n    couchapp push . http://localhost:5984/example\n\nor (if you have security turned on)\n\n    couchapp push . http://adminname:adminpass@localhost:5984/example\n  \nYou can also create this app by running\n\n    couchapp generate example && cd example\n    couchapp push . http://localhost:5984/example\n\nDeprecated: *couchapp generate proto && cd proto*\n\n\n## Todo\n\n* factor CouchApp Commonjs to jquery.couch.require.js\n* use $.couch.app in app.js\n\n## License\n\nApache 2.0",
  "_id": "_design/test-couchapp",
  "shows": {},
  "couchapp": {
    "manifest": [
      "couchapp.json",
      "language",
      "lists/",
      "README.md",
      "shows/",
      "updates/",
      "vendor/",
      "vendor/couchapp/",
      "vendor/couchapp/metadata.json",
      "views/",
      "views/recent-items/",
      "views/recent-items/map.js"
    ],
    "signatures": {
      "index.html": "cd1face44add6a03818cf3cc5eb2700e",
      "vendor/couchapp/md5.js": "765de38d07dbee73ee1859037cdb79f7",
      "script/app.js": "49b8595c2821f8ce154d883863fd8e86",
      "vendor/couchapp/jquery.mustache.js": "0bfbc929b6d5500aacfa860c783550d8",
      "vendor/couchapp/jquery.couchProfile.js": "448acd8b2187d25a3fe2e10c6019f5ce",
      "vendor/couchapp/jquery.couchLogin.js": "2523482008955747ddba7a20fed98b54",
      "vendor/couchapp/jquery.couch.app.js": "d395b6e8c9781a78230050b90dd87936",
      "vendor/couchapp/jquery.couchForm.js": "7add5db2e78544a4eac7e8d2251de651",
      "style/main.css": "d76a19365833c6c8615b45804f59f84a",
      "vendor/couchapp/jquery.couch.app.util.js": "9fc84685dfa7b35237239916ae406583"
    },
    "name": "Basic CouchApp",
    "objects": {},
    "description": "CouchApp with changes feed and form support."
  }
}
